{"version":3,"sources":["Redux/ToDo-reducer.js","Redux/redux-store.js","components/ToDo/RemoveTodo/index.js","components/ToDo/TodoItem/checkbox.js","components/ToDo/TodoItem/dateSVG.js","components/ToDo/TodoItem/index.js","components/ToDo/addTodo/index.js","components/ToDo/TodoItem/selectorCompleted.js","components/ToDo/ToDo.jsx","components/ToDo/ToDoContainer.js","components/Nav/Nav.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","todos","valueTextarea","SelectedValue","Todo_reduser","state","action","type","map","e","id","completed","newTodo","Date","now","title","showDate","newTodos","filter","value","reducers","combineReducers","ToDo","store","createStore","RemoveTodo","React","memo","props","onClick","removeTodoAC","className","viewBox","d","GreenCheckbox","withStyles","root","color","green","checked","Checkbox","CheckboxLabels","FormControlLabel","todo","control","onChange","changeCompleted","name","label","DateSVG","version","style","fill","cx","cy","r","TodoItem","index","key","cangeCompleted","setShowDate","top","toLocaleString","useStyles","makeStyles","theme","margin","spacing","width","AddTodo","classes","noValidate","autoComplete","TextField","event","setValueTitle","target","Button","variant","preventDefault","addTodoAC","formControl","minWidth","selectEmpty","marginTop","NativeSelects","FormControl","NativeSelect","setSelectedValue","FormHelperText","setValueTitleAC","setSelectedValueAC","cangeCompletedTodoAC","TodoContainer","connect","setTodosAC","text","useEffect","setTodos","JSON","parse","localStorage","todoList","stringify","flexGrow","menuButton","marginRight","display","breakpoints","up","SearchAppBar","useState","showMenu","setShowMenu","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","noWrap","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.69de5f1c.chunk.js","sourcesContent":["const CHANGE_COMPLETED_TODO = 'CHANGE_COMPLETED_TODO';\r\nconst ADD_TODO = 'ADD_TODO';\r\nconst REMOVE_TODO = 'REMOVE_TODO';\r\nconst SET_VALUE_TITLE = 'SET_VALUE_TITLE';\r\nconst SET_SELECTE_VALUE = 'setChangeSelectedValue';\r\nconst SET_SHOW_DATE = 'SET_SHOW_DATE';\r\nconst SET_TODOS = 'SET_TODOS';\r\n\r\nlet initialState = {\r\n   todos: [],\r\n   valueTextarea: '',\r\n   SelectedValue: '',\r\n}\r\n\r\nlet Todo_reduser = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case SET_TODOS:\r\n         return{\r\n            ...state,\r\n            todos: [...action.todos]\r\n         }\r\n      case CHANGE_COMPLETED_TODO:\r\n         return {\r\n            ...state,\r\n            todos: [...state.todos.map(e => {\r\n               if (e.id === action.id) {\r\n                  e.completed = !e.completed\r\n               }\r\n               return { ...e }\r\n            })\r\n            ]\r\n         }\r\n      case ADD_TODO:\r\n         if (state.valueTextarea) {\r\n            let newTodo = {\r\n               id: Date.now(),\r\n               completed: false,\r\n               title: state.valueTextarea,\r\n               showDate: false,\r\n            }\r\n            return {\r\n               ...state,\r\n               todos: [...state.todos, newTodo],\r\n               valueTextarea: '',\r\n            }\r\n         }\r\n         return state\r\n      case REMOVE_TODO:\r\n         let newTodos = state.todos.filter(e => e.id !== action.id)\r\n         return {\r\n            ...state,\r\n            todos: [...newTodos]\r\n         }\r\n      case SET_VALUE_TITLE:\r\n         return {\r\n            ...state,\r\n            valueTextarea: action.value,\r\n         }\r\n      case SET_SELECTE_VALUE:\r\n         return {\r\n            ...state,\r\n            SelectedValue: action.value,\r\n         }\r\n      case SET_SHOW_DATE:\r\n         return {\r\n            ...state,\r\n            todos: [...state.todos.map(e => {\r\n               if (e.id === action.id) {\r\n                  e.showDate = !e.showDate\r\n               }\r\n               return { ...e }\r\n            })\r\n            ]\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}\r\n\r\nexport let setTodosAC = (todos) => ({\r\n   type: 'SET_TODOS',\r\n   todos,\r\n})\r\nexport let cangeCompletedTodoAC = (id) => ({\r\n   type: 'CHANGE_COMPLETED_TODO',\r\n   id,\r\n})\r\nexport let addTodoAC = (text) => ({\r\n   type: 'ADD_TODO',\r\n   text,\r\n})\r\nexport let removeTodoAC = (id) => ({\r\n   type: 'REMOVE_TODO',\r\n   id,\r\n})\r\nexport let setValueTitleAC = (value) => ({\r\n   type: 'SET_VALUE_TITLE',\r\n   value,\r\n})\r\nexport let setSelectedValueAC = (value) => ({\r\n   type: 'setChangeSelectedValue',\r\n   value,\r\n})\r\nexport let setShowDate = (id) => ({\r\n   type: 'SET_SHOW_DATE',\r\n   id\r\n})\r\n\r\nexport default Todo_reduser;","import { combineReducers, createStore } from 'redux';\r\nimport ToDo from './ToDo-reducer'\r\n\r\nlet reducers = combineReducers({\r\n   ToDo,\r\n})\r\n\r\nlet store = createStore(reducers)\r\nexport default store;","import React from 'react';\r\n\r\nconst RemoveTodo = React.memo(props => {\r\n\r\n   let removeTodo = () => {\r\n      props.removeTodoAC(props.id)\r\n   }\r\n   return (\r\n      <div onClick={removeTodo} className='removeTodo'>\r\n         <svg id='removeSVG' viewBox=\"0 0 512 512\" ><g><path d=\"m424 64h-88v-16c0-26.51-21.49-48-48-48h-64c-26.51 0-48 21.49-48 48v16h-88c-22.091 0-40 17.909-40 40v32c0 8.837 7.163 16 16 16h384c8.837 0 16-7.163 16-16v-32c0-22.091-17.909-40-40-40zm-216-16c0-8.82 7.18-16 16-16h64c8.82 0 16 7.18 16 16v16h-96z\"/><path d=\"m78.364 184c-2.855 0-5.13 2.386-4.994 5.238l13.2 277.042c1.22 25.64 22.28 45.72 47.94 45.72h242.98c25.66 0 46.72-20.08 47.94-45.72l13.2-277.042c.136-2.852-2.139-5.238-4.994-5.238zm241.636 40c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16zm-80 0c0-8.84 7.16-16 16-16s16 7.16 16 16v208c0 8.84-7.16 16-16 16s-16-7.16-16-16z\"/></g></svg>\r\n      </div>\r\n   );\r\n})\r\n\r\nexport default RemoveTodo;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport '../ToDo.scss'\r\n\r\n\r\nconst GreenCheckbox = withStyles({\r\n   root: {\r\n      color: green[400],\r\n      '&$checked': {\r\n         color: green[600],\r\n      },\r\n   },\r\n   checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default function CheckboxLabels(props) {\r\n\r\n   const handleChange = () => {\r\n      props.changeCompleted(props.todo.id)\r\n   };\r\n\r\n   return (\r\n         <div className='checkbox'>\r\n         <FormControlLabel className={props.todo.completed ? 'Todo-completed' : 'Todo-nocompleted'}\r\n               control={<GreenCheckbox checked={props.todo.completed} onChange={handleChange} name=\"checkedG\" />}\r\n               label={props.todo.title} \r\n            />\r\n         </div>\r\n         \r\n   );\r\n}\r\n","import React from 'react';\r\n\r\nconst DateSVG = (props) => {\r\n   return (\r\n\t\t<svg version=\"1.1\" id=\"calendarSVG\" \r\n\t\t\tstyle={props.showDate ? { fill: '#e00101' } : { fill: '#004912'}} \r\n\t\tviewBox=\"0 0 512 512\" >\r\n\t\t\t<circle cx=\"386\" cy=\"210\" r=\"20\" />\r\n\t\t\t<path d=\"M432,40h-26V20c0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20v20h-91V20c0-11.046-8.954-20-20-20\r\n\t\tc-11.046,0-20,8.954-20,20v20h-90V20c0-11.046-8.954-20-20-20s-20,8.954-20,20v20H80C35.888,40,0,75.888,0,120v312\r\n\t\tc0,44.112,35.888,80,80,80h153c11.046,0,20-8.954,20-20c0-11.046-8.954-20-20-20H80c-22.056,0-40-17.944-40-40V120\r\n\t\tc0-22.056,17.944-40,40-40h25v20c0,11.046,8.954,20,20,20s20-8.954,20-20V80h90v20c0,11.046,8.954,20,20,20s20-8.954,20-20V80h91\r\n\t\tv20c0,11.046,8.954,20,20,20c11.046,0,20-8.954,20-20V80h26c22.056,0,40,17.944,40,40v114c0,11.046,8.954,20,20,20\r\n\t\tc11.046,0,20-8.954,20-20V120C512,75.888,476.112,40,432,40z\"/>\r\n\t\t\t<path d=\"M391,270c-66.72,0-121,54.28-121,121s54.28,121,121,121s121-54.28,121-121S457.72,270,391,270z M391,472\r\n\t\tc-44.663,0-81-36.336-81-81s36.337-81,81-81c44.663,0,81,36.336,81,81S435.663,472,391,472z\"/>\r\n\t\t\t<path d=\"M420,371h-9v-21c0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20v41c0,11.046,8.954,20,20,20h29\r\n\t\tc11.046,0,20-8.954,20-20C440,379.954,431.046,371,420,371z\"/>\r\n\t\t\t<circle cx=\"299\" cy=\"210\" r=\"20\" />\r\n\t\t\t<circle cx=\"212\" cy=\"297\" r=\"20\" />\r\n\t\t\t<circle cx=\"125\" cy=\"210\" r=\"20\" />\r\n\t\t\t<circle cx=\"125\" cy=\"297\" r=\"20\" />\r\n\t\t\t<circle cx=\"125\" cy=\"384\" r=\"20\" />\r\n\t\t\t<circle cx=\"212\" cy=\"384\" r=\"20\" />\r\n\t\t\t<circle cx=\"212\" cy=\"210\" r=\"20\" />\r\n\t\t</svg>\r\n   );\r\n}\r\n\r\nexport default DateSVG;\r\n","import React from 'react';\r\nimport '../ToDo.scss';\r\nimport RemoveTodo from '../RemoveTodo'\r\nimport GreenCheckbox from './checkbox'\r\nimport DateSVG from './dateSVG'\r\n\r\nconst TodoItem = (props) => {\r\n\r\n   let showDateTime = (id) => {\r\n      props.setShowDate(id)\r\n   }\r\n\r\n   let todos = props.todos\r\n   if (props.SelectedValue === 'all') {\r\n      todos = props.todos\r\n   }\r\n   else if (props.SelectedValue === 'completed') {\r\n      todos = props.todos.filter(e => e.completed === true)\r\n   }\r\n   else if (props.SelectedValue === 'notCompleted') {\r\n      todos = props.todos.filter(e => e.completed === false)\r\n   }\r\n\r\n   return (\r\n      <div className='todoItems'>\r\n         {\r\n            todos.map((todo, index) => {\r\n               return (\r\n                  <div key={todo.id} className=\"todoItems__inner\">\r\n                     <span className='todoNum'>{index + 1}</span>\r\n                     <GreenCheckbox\r\n                        todo={todo}\r\n                        changeCompleted={props.cangeCompleted}\r\n                     />\r\n\r\n                     <RemoveTodo id={todo.id} removeTodoAC={props.removeTodoAC} />\r\n                     <div className=\"calendarIco\" onClick={() => showDateTime(todo.id)}>\r\n                        <DateSVG showDate={todo.showDate}/>\r\n                     </div>\r\n                     <p className='Date' style={todo.showDate ? { top: '-42px' } : { top: 0 }}>{(\"\" + (new Date(todo.id)).toLocaleString())}</p>\r\n                  </div>\r\n               )\r\n            })\r\n         }\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TodoItem;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst AddTodo = (props) => {\r\n\r\nconst classes = useStyles();\r\n\r\n   let addTodo = (event) => {\r\n      event.preventDefault()\r\n      props.addTodoAC()\r\n   }\r\nlet changeTitle = (event) => {\r\n   props.setValueTitle(event.target.value)\r\n}\r\n\r\n   return (\r\n      <div>\r\n         <form className={classes.root} noValidate autoComplete=\"off\">\r\n            <TextField id=\"standard-basic\" label=\"Your task\"  \r\n               value={props.value}\r\n               onChange={changeTitle}\r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" type='submit' onClick={addTodo}>add task</Button>\r\n         </form>   \r\n      </div>\r\n   );\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n   },\r\n   selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n   },\r\n}));\r\n\r\nexport default function NativeSelects(props) {\r\n   const classes = useStyles();\r\n   let onSelect = (event) => {\r\n      props.setSelectedValue(event.target.value)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <FormControl className={classes.formControl}>\r\n            <NativeSelect\r\n               onChange={onSelect}\r\n               className={classes.selectEmpty}\r\n            >\r\n               <option value={'all'}>All</option>\r\n               <option value={'completed'}>Completed</option>\r\n               <option value={'notCompleted'}>No completed</option>\r\n            </NativeSelect>\r\n            <FormHelperText>Todo completed status</FormHelperText>\r\n         </FormControl>   \r\n      </div>\r\n   );\r\n}\r\n","import React from 'react';\r\nimport './ToDo.scss'\r\nimport TodoItem from './TodoItem';\r\nimport AddTodo from './addTodo';\r\nimport NativeSelects from './TodoItem/selectorCompleted';\r\n\r\nconst ToDo = (props) => {\r\n   return (\r\n      <div className='ToDo'>\r\n         <AddTodo \r\n            addTodoAC={props.addTodoAC}\r\n            setValueTitle={props.setValueTitleAC}\r\n            value={props.value}\r\n         />\r\n         <NativeSelects setSelectedValue={props.setSelectedValueAC}/>\r\n         <TodoItem \r\n            todos={props.todos}\r\n            cangeCompleted={props.cangeCompletedTodoAC}\r\n            removeTodoAC={props.removeTodoAC}\r\n            SelectedValue={props.SelectedValue}\r\n            setShowDate={props.setShowDate}\r\n         />\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ToDo;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ToDo from './ToDo';\r\nimport { setTodosAC, setShowDate, cangeCompletedTodoAC, addTodoAC, removeTodoAC, setValueTitleAC, setSelectedValueAC, } from '../../Redux/ToDo-reducer';\r\n\r\nconst ToDoContainer = (props) => {\r\n\r\n   useEffect(() => { \r\n      let setTodos = (setTodos) => {\r\n         return setTodos(JSON.parse(localStorage.todoList))\r\n      }   \r\n      setTodos(props.setTodosAC)                   \r\n   }, [props.setTodosAC])\r\n\r\n   useEffect(() => {    \r\n      localStorage.todoList = JSON.stringify(props.todos)\r\n   }, [props.todos])\r\n\r\n\r\n   return <ToDo {...props} todos={props.todos} />\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n   return {\r\n      todos: state.ToDo.todos,\r\n      value: state.ToDo.valueTextarea,\r\n      SelectedValue: state.ToDo.SelectedValue,\r\n   }\r\n}\r\n\r\nconst TodoContainer = connect(mapStateToProps, {\r\n   setTodosAC,  cangeCompletedTodoAC, addTodoAC, removeTodoAC, setValueTitleAC,\r\n   setSelectedValueAC, setShowDate,\r\n})(ToDoContainer)\r\n\r\nexport default TodoContainer;\r\n","import React, { useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   root: {\r\n      flexGrow: 1,\r\n   },\r\n   menuButton: {\r\n      marginRight: theme.spacing(2),\r\n   },\r\n   title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n         display: 'block',\r\n      },\r\n   },\r\n  \r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n   const classes = useStyles();\r\n   let [showMenu, setShowMenu] = useState(false)\r\n\r\n   let onShowMenu = () => {\r\n      setShowMenu(showMenu = !showMenu)\r\n   }\r\n\r\n   return (\r\n      <div className={classes.root}>\r\n         <AppBar position=\"static\">\r\n            <Toolbar>\r\n               <IconButton\r\n                  edge=\"start\"\r\n                  className={classes.menuButton}\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={onShowMenu}\r\n               >\r\n                  <MenuIcon />\r\n               </IconButton>\r\n               <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  ToDo\r\n               </Typography> \r\n            </Toolbar> \r\n         </AppBar>            \r\n         <div className=\"headerContent\" style={showMenu ? { top: '0' } : { top: '-1000px' }}>\r\n            <p>Lorem ipsum dolor, sit amet consectetur adipisicing \r\n            elit. Placeat dicta rem error provident deleniti, \r\n            perspiciatis nihil obcaecati possimus aut delectus \r\n            incidunt veniam laudantium quisquam adipisci optio \r\n            a quas maiores ducimus.</p>\r\n         </div>        \r\n      </div>\r\n   );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport TodoContainer from './components/ToDo/ToDoContainer';\nimport SearchAppBar from './components/Nav/Nav';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchAppBar />\n      <TodoContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport store from './Redux/redux-store'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}